    ; assembly                                   | /* r2dec pseudo code output */
                                                 | /* testsuite @ 0x0 */
                                                 | #include <stdint.h>
                                                 |  
    ; (fcn) sym.main ()                          | int32_t main (void) {
                                                 |     wchar_t * s2;
                                                 |     int32_t local_1ch;
    0x08048494 push ebp                          |     
    0x08048495 mov ebp, esp                      |     
    0x08048497 and esp, 0xfffffff0               |     
    0x0804849a add esp, 0xffffffffffffff80       |     
                                                 |     do {
    0x0804849d mov eax, 0x80485d0                |         eax = "Enter password: ";
    0x080484a2 mov dword [esp], eax              |         
    0x080484a5 call 0x8048380                    |         printf (eax);
    0x080484aa mov eax, 0x80485e1                |         eax = "%ls";
    0x080484af lea edx, [esp + 0x1c]             |         edx = &local_1ch;
    0x080484b3 mov dword [esp + 4], edx          |         
    0x080484b7 mov dword [esp], eax              |         
    0x080484ba call 0x80483d0                    |         isoc99_scanf (eax, edx);
    0x080484bf lea eax, [esp + 0x1c]             |         eax = &local_1ch;
    0x080484c3 mov dword [esp + 4], eax          |         
    0x080484c7 mov dword [esp], 0x804a040        |         
    0x080484ce call 0x8048390                    |         eax = wcscmp ("w0wgreat", eax);
    0x080484d3 test eax, eax                     |         
                                                 |         if (eax == 0) {
    0x080484d5 jne 0x80484eb                     |             
    0x080484d7 mov dword [esp], 0x80485e5        |             
    0x080484de call 0x80483a0                    |             puts ("Congrats!");
    0x080484e3 nop                               |             
    0x080484e4 mov eax, 0                        |             eax = 0;
    0x080484e9 leave                             |             
    0x080484ea ret                               |             return eax;
                                                 |         }
    0x080484eb mov dword [esp], 0x80485ef        |         
    0x080484f2 call 0x80483a0                    |         puts ("Wrong!");
    0x080484f7 jmp 0x804849d                     |         
                                                 |     } while (1);
                                                 | }
